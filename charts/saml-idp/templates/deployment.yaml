apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ .Release.Name  }}
    heritage: {{ .Release.Service }}
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      hostname: {{ .Chart.Name | quote }}
      subdomain: {{ template "fullname" . }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
{{ include "imagePullSecrets" . | indent 6 }}
      {{- if (index .Values "generate-certificates" "enabled") }}
      initContainers:
        - name: certificate-init-container
          image: {{ index .Values "generate-certificates" "image" }}
          imagePullPolicy: {{ default .Values.imagePullPolicy .Values.global.imagePullPolicy | default "IfNotPresent" }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: CERT_DIR
              value: /etc/tls
          command:
            - "/bin/sh"
            - "-c"
            - >
              mkdir /etc/tls ;
              /certificate-init-container -secret-name={{ template "fullname" . }}-secret-tls -labels=app={{ template "fullname" . }},chart={{ .Chart.Name }},release={{ .Release.Name }},heritage={{ .Release.Service }} -additional-dnsnames={{ template "fullname" . }},{{ template "fullname" . }}.$(NAMESPACE),{{ template "fullname" . }}.$(NAMESPACE).svc -cert-dir=$(CERT_DIR) -namespace=$(NAMESPACE) -pod-ip=$(POD_IP) -pod-name=$(POD_NAME) -service-names={{ template "fullname" . }} -cluster-domain={{ template "cluster_domain" . }} ;
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ default .Values.imagePullPolicy .Values.global.imagePullPolicy | default "IfNotPresent" }}
        env:
          - name: SIMPLESAMLPHP_SP_ENTITY_ID
            value: https://{{ template "onezone_service_url" . }}/sp
          - name: SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE
            value: https://{{ template "onezone_service_url" . }}/saml/consume
          - name: SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE
            value: https://{{ template "onezone_service_url" . }}/saml/logout
        ports:
          - containerPort: 80
          - containerPort: 443
        readinessProbe:
          exec:
            command:
              - "sh"
              - "-c"
              - >
                curl --output /dev/null --silent --connect-timeout 2 localhost:80 ;
        volumeMounts:
          - mountPath: /var/www/simplesamlphp/config/authsources.php
            subPath: authsources.php
            name: users
            readOnly: false
      {{- if (index .Values "generate-certificates" "enabled") }}
          - mountPath: /etc/ssl/private/private.key
            subPath: tls.key
            name: tls
            readOnly: true
          - mountPath: /etc/ssl/cert/cert.crt
            subPath: tls.crt
            name: tls
            readOnly: true
          - mountPath: /etc/ssl/certs/kubernetes.crt
            subPath: k8s.crt
            name: tls
            readOnly: true
          - mountPath: /a
            name: tls
            readOnly: true
    {{- end }}
      volumes:
      - name: users
        configMap:
          name: {{ template "fullname" . }}
    {{- if (index .Values "generate-certificates" "enabled") }}
      - name: tls
        secret:
          secretName: {{ template "fullname" . }}-secret-tls
    {{- end }}